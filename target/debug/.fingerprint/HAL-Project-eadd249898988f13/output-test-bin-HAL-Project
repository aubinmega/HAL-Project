{"$message_type":"diagnostic","message":"Ensure that you are using an AVR target! You may need to change directories or pass a --target flag to cargo. See\n       https://github.com/Rahix/avr-device/pull/41 for more details.","code":null,"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":308,"byte_end":316,"line_start":15,"line_end":15,"column_start":1,"column_end":9,"is_primary":true,"text":[{"text":"#[entry]","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\main.rs","byte_start":308,"byte_end":316,"line_start":15,"line_end":15,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"#[entry]","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[entry]","def_site_span":{"file_name":"C:\\Users\\AubinDOJ\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\avr-device-macros-0.5.4\\src\\lib.rs","byte_start":183,"byte_end":296,"line_start":10,"line_end":13,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn entry(","highlight_start":1,"highlight_end":14},{"text":"    args: proc_macro::TokenStream,","highlight_start":1,"highlight_end":35},{"text":"    input: proc_macro::TokenStream,","highlight_start":1,"highlight_end":36},{"text":") -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: Ensure that you are using an AVR target! You may need to change directories or pass a --target flag to cargo. See\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;15m              https://github.com/Rahix/avr-device/pull/41 for more details.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[entry]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `entry` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"duplicate lang item in crate `std` (which `test` depends on): `panic_impl`","code":{"code":"E0152","explanation":"A lang item was redefined.\n\nErroneous code example:\n\n```compile_fail,E0152\n#![feature(lang_items)]\n\n#[lang = \"owned_box\"]\nstruct Foo<T>(T); // error: duplicate lang item found: `owned_box`\n```\n\nLang items are already implemented in the standard library. Unless you are\nwriting a free-standing application (e.g., a kernel), you do not need to provide\nthem yourself.\n\nYou can build a free-standing crate by adding `#![no_std]` to the crate\nattributes:\n\n```ignore (only-for-syntax-highlight)\n#![no_std]\n```\n\nSee also [this section of the Rustonomicon][beneath std].\n\n[beneath std]: https://doc.rust-lang.org/nomicon/beneath-std.html\n"},"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `panic_halt` (which `HAL_Project` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `panic_halt` loaded from \\\\?\\C:\\Users\\AubinDOJ\\Documents\\ESILV-A4\\HW-Virtualisation_Trust\\Projet\\HAL-Project\\target\\debug\\deps\\libpanic_halt-ff1bb78e5812b533.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `std` loaded from \\\\?\\C:\\Users\\AubinDOJ\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libstd-073a1af16570a071.rlib","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0152]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: duplicate lang item in crate `std` (which `test` depends on): `panic_impl`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `panic_halt` (which `HAL_Project` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: first definition in `panic_halt` loaded from \\\\?\\C:\\Users\\AubinDOJ\\Documents\\ESILV-A4\\HW-Virtualisation_Trust\\Projet\\HAL-Project\\target\\debug\\deps\\libpanic_halt-ff1bb78e5812b533.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: second definition in `std` loaded from \\\\?\\C:\\Users\\AubinDOJ\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libstd-073a1af16570a071.rlib\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0152`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0152`.\u001b[0m\n"}
